#Controlling the PCA: https://pypi.org/project/joycon-python/
import RPi.GPIO as GPIO
import time
import sys

from evdev import InputDevice, categorize, ecodes


#creates object 'gamepad' to store the data
gamepad = InputDevice('/dev/input/event8')

#button code variables (PLEASE CHECK AND CHANGE WHAT IS WRITE AND WHAT ISNT)
BTN_B = 305          #Actually the X Button
BTN_A = 304          #Actually the A button
BTN_C = 306          #Actually the B button
BTN_X = 307          #Actually the Y button

# Setup of GPIO pin numbering type
GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)

# Assign the pin numberings for the motors
Motor_A1 = 21
Motor_A2 = 26
Motor_B1 = 19
Motor_B2 = 24

# Set the GPIO pins to be output in nature
GPIO.setup(Motor_A1, GPIO.OUT)
GPIO.setup(Motor_A2, GPIO.OUT)
GPIO.setup(Motor_B1, GPIO.OUT)
GPIO.setup(Motor_B2, GPIO.OUT)

# Initiation time
time.sleep(2)

# Creating the different movement functions
# Both motors moving forward

def move_forward():    
    GPIO.output(Motor_A1, 1)
    GPIO.output(Motor_A2, 1)
    GPIO.output(Motor_B1, 1)
    GPIO.output(Motor_B2, 1)

def move_backwards():
    GPIO.output(Motor_A1, 0)
    GPIO.output(Motor_A2, 1)
    GPIO.output(Motor_B1, 1)
    GPIO.output(Motor_B2, 0)

def turn_right():
    GPIO.output(Motor_A1, 1)
    GPIO.output(Motor_A2, 0)
    GPIO.output(Motor_B1, 1)
    GPIO.output(Motor_B2, 0)

def turn_left():
    GPIO.output(Motor_B1, 0)
    GPIO.output(Motor_B2, 1)
    GPIO.output(Motor_B1, 1)
    GPIO.output(Motor_B2, 0)

# Both motors off
def no_movement():
    GPIO.output(Motor_A1, 0)
    GPIO.output(Motor_A2, 0)
    GPIO.output(Motor_B1, 0)
    GPIO.output(Motor_B2, 0)
    
#def on_press():
    #try:
#Loop and filter by event code and print the mapped label
for event in gamepad.read_loop():
    if event.type == ecodes.EV_KEY:
        if event.value == 1:
            if event.code == BTN_B:
                print('X')
                move_forward()
                print ("going forward zoom zoom")
            elif event.code == BTN_A:
                print('A')
                turn_right()
                print ("right turn zoom zoom")
            elif event.code == BTN_C:
                print('B')
                move_backwards()
                print ("going backwards zoom zoom")
            elif event.code == BTN_X:
                print('Y')
                turn_left()
                print ("left turn zoom zoom")                    
      
        else:
            no_movement()
    
    
##        KEY = key.char.lower()
##        time.sleep(3)
##        if KEY in ["w"]:
##            move_forward()
##        elif KEY in ["a"]:
##            turn_left()
##        elif KEY in ["s"]:
##            move_backwards()
##        elif KEY in ["d"]:
##            turn_right()
##        else:
##            no_movement()
##    except:
##        pass

on_press()
GPIO.cleanup()
